homeassistant:
  auth_providers:
    - type: homeassistant
  name: !secret home_name
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  elevation: !secret home_elevation
  unit_system: metric
  temperature_unit: C
  time_zone: Europe/Paris

# Integration, users, etc.
config:

# Sunset and sunrise time
sun:

# Frontend config (see ./ui-lovelace.yaml)
frontend:
lovelace:
  mode: yaml

# System health report
system_health:

# Weather
meteo_france:
  - city: !secret weather_meteo_france_city

# Philips Hue
hue:
  bridges:
    - host: !secret hue_host
      allow_hue_groups: false
      allow_unreachable: true

# Netatmo
netatmo:
  client_id: !secret netatmo_client_id
  client_secret: !secret netatmo_client_secret

# Google Chromecast
cast:

# Not working, need to update the component in ha/core (now using client/secret)
# Enedis Linky
# linky:
#   - username: !secret linky_username
#     password: !secret linky_password

# Wait for implementation on RPi + sniffing codes (https://github.com/ninjablocks/433Utils)
# switch:
#   - platform: rpi_rf
#     gpio: 0 # todo
#     switches:
#       awning:
#         code_on: 11111 # todo
#         code_off: 00000 # todo

sensor:
  # Google Travel Time
  - platform: google_travel_time
    api_key: !secret google_travel_time_api_key
    name: google_travel_time_destination_1
    origin: !secret google_travel_time_origin_home
    destination: !secret google_travel_time_destination_1
    scan_interval: 900
    options:
      mode: driving
      departure_time: now
      avoid: tolls
  - platform: google_travel_time
    api_key: !secret google_travel_time_api_key
    name: google_travel_time_destination_2
    origin: !secret google_travel_time_origin_home
    destination: !secret google_travel_time_destination_2
    scan_interval: 900
    options:
      mode: driving
      departure_time: now
      avoid: tolls
  - platform: rest
    name: rest_vigicrue_hydro_observation
    resource: !secret rest_vigicrue_hydro_observation_url
    method: !secret rest_vigicrue_hydro_observation_method
    value_template: '{{value_json.Serie.ObssHydro[0].ResObsHydro}}'
    json_attributes:
      - Serie
    scan_interval: 300
  - platform: rest
    name: rest_transilien_search
    resource: !secret rest_transilien_search_url
    method: !secret rest_transilien_search_method
    payload: !secret rest_transilien_search_payload
    headers:
      Content-Type: application/json
    value_template: '{{value_json.nextTrainsList[0].departureTime}}'
    json_attributes:
      - nextTrainsList
    scan_interval: 60

timer:
  laundry1:
    duration: '00:01:30'
  laundry2:
    duration: '00:02:00'
  dryer1:
    duration: '00:00:45'
  dryer2:
    duration: '00:01:10'
  dryer3:
    duration: '00:03:00'

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
