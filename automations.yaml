- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  trigger:
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: time
      after: '07:00:00'
      before: '09:00:00'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.google_travel_time_destination_1
- id: create_weekly_backup
  alias: "Backup - Create snapshot weekly"
  trigger:
    platform: time
    at: '04:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - fri
  action:
    - service: hassio.backup_partial
      data:
        name: Hassio - {{now().strftime('%y-%m-%d')}}
        addons:
          - core_ssh
          - core_git_pull
          - a0d7b954_ftp
        folders:
          - homeassistant
          - addons/local
          - ssl
- id: dropbox_sync_upload
  alias: "Dropbox sync - Backup"
  trigger:
    platform: time
    at: '06:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - fri
  action:
    - service: shell_command.dropbox_sync
- id: netatmo_ftp_clean_up
  alias: "Netatmo - FTP clean up"
  trigger:
    platform: time_pattern
    hours: "*"
    minutes: "00"
  action:
    - service: shell_command.netatmo_ftp_clean_up
# - id: r7000_backup
#   alias: "R7000 - Backup"
#   trigger:
#     platform: time
#     at: '05:00:00'
#   condition:
#     condition: time
#     weekday:
#       - mon
#   action:
#     - service: shell_command.r7000_backup
#       data:
#         username: !secret r7000_username
#         password: !secret r7000_password
#         router_ip: !secret r7000_router_ip
- id: notify_fiber_disconnection
  alias: "Notify - Fiber disconnection"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.fiber_connection
      from: 'on'
      to: 'off'
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Fiber connection lost"
        title: "Oh noes! üòñ"
- id: notify_fiber_connection
  alias: "Notify - Fiber connection"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.fiber_connection
      from: 'off'
      to: 'on'
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Fiber connection restored"
        title: "Yay! üéâ"
- id: notify_vigicrue
  alias: "Notify - Vigicrue"
  trigger:
    platform: numeric_state
    entity_id: sensor.rest_vigicrue_hydro_observation
    above: 1.8
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Vigicrue alert"
        title: "Above 1.8m üåä"
- id: notify_suez_water
  alias: "Notify - Suez"
  trigger:
    platform: numeric_state
    entity_id: sensor.suez_water_consumption
    above: 500
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Suez alert"
        title: "Above 500L üíß"
- id: notify_dryer1_finished
  alias: "Notify - Dryer 1 finished"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dryer1
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Dryer ‚ô®Ô∏è"
        title: "00:45 finished"
- id: notify_dryer2_finished
  alias: "Notify - Dryer 2 finished"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dryer2
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Dryer ‚ô®Ô∏è"
        title: "01:05 finished"
- id: notify_dryer3_finished
  alias: "Notify - Dryer 3 finished"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.dryer3
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Dryer ‚ô®Ô∏è"
        title: "02:00 finished"
- id: aqara_dryer1_pressed
  alias: "Button - Dryer 1 pressed"
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        device_id: 4a935d6fdf67c4b4ee185ebe93011d77
  condition:
    - condition: template
      value_template: '{{ trigger.event.data.command == "single" }}'
  action:
    - service: timer.start
      target:
        entity_id: timer.dryer1
- id: aqara_dryer2_pressed
  alias: "Button - Dryer 2 pressed"
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        device_id: 4a935d6fdf67c4b4ee185ebe93011d77
  condition:
    - condition: template
      value_template: '{{ trigger.event.data.command == "double" }}'
  action:
    - service: timer.start
      target:
        entity_id: timer.dryer2
- id: aqara_dryer3_pressed
  alias: "Button - Dryer 3 pressed"
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        device_id: 4a935d6fdf67c4b4ee185ebe93011d77
  condition:
    - condition: template
      value_template: '{{ trigger.event.data.command == "hold" }}'
  action:
    - service: timer.start
      target:
        entity_id: timer.dryer3
- id: notify_edf_tempo
  alias: "Notify - EDF Tempo"
  trigger:
    - platform: state
      entity_id: sensor.tempo_tomorrow
  condition:
    - condition: template
      value_template: '{{ states("sensor.tempo_tomorrow") != "NON_DEFINI" }}'
  action:
    - service: !secret notify_mobile_me
      data:
        message: "EDF Tempo - {{ now().strftime('%A') }}"
        title: "{{ states('sensor.tempo_tomorrow') }} ‚ö°"

# - id: opensky_flights_enter
#   alias: "OpenSky - Flights enter"
#   trigger:
#     - platform: event
#       event_type: opensky_entry
#   action:
#     # Create a new state with callsign as the entity_id
#     - service: homeassistant.set_state
#       data_template:
#         entity_id: "sensor.opensky_{{ trigger.event.data.callsign }}"
#         state: "{{ trigger.event.data.callsign }}"
#         attributes:
#           icao24: "{{ trigger.event.data.icao24 }}"
#           callsign: "{{ trigger.event.data.callsign }}"
#           longitude: "{{ trigger.event.data.longitude }}"
#           latitude: "{{ trigger.event.data.latitude }}"
#           altitude: "{{ trigger.event.data.altitude }}"
# - id: opensky_flights_leave
#   alias: "OpenSky - Flights leave"
#   trigger:
#     - platform: event
#       event_type: opensky_exit
#   action:
#     # Remove state with callsign
#     - service: homeassistant.remove_state
#       data_template:
#         entity_id: "sensor.opensky_{{ trigger.event.data.callsign }}"
