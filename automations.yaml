- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/5'
  condition:
    - condition: time
      after: '07:00:00'
      before: '09:00:00'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.google_travel_time_destination_1
- id: create_weekly_backup
  alias: "Backup - Create snapshot weekly"
  initial_state: 'on'
  trigger:
    platform: time
    at: '04:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - fri
  action:
    - service: hassio.backup_partial
      data:
        name: Hassio - {{now().strftime('%y-%m-%d')}}
        addons:
          - core_ssh
          - core_check_config
          - core_git_pull
          - a0d7b954_ftp
          - 7be23ff5_dropbox_sync
        folders:
          - homeassistant
          - addons/local
          - ssl
    - service: hassio.addon_stdin
      data_template:
        addon: 7be23ff5_dropbox_sync
        input: {"command":"upload"}
- id: netatmo_ftp_clean_up
  alias: "Netatmo - FTP clean up"
  initial_state: 'on'
  trigger:
    platform: time_pattern
    hours: "*"
    minutes: "00"
  action:
    - service: shell_command.netatmo_ftp_clean_up
- id: r7000_backup
  alias: "R7000 - Backup"
  initial_state: 'on'
  trigger:
    platform: time
    at: '05:00:00'
  condition:
    condition: time
    weekday:
      - mon
  action:
    - service: shell_command.r7000_backup
      data:
        credentials: !secret r7000_credentials
        router_ip: !secret r7000_router_ip
- id: notify_internet_disconnection
  alias: "Notify - Internet disconnection"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.internet_connection
    to: 'off'
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Internet connection lost"
        title: "Oh noes! ðŸ˜–"
- id: notify_internet_connection
  alias: "Notify - Internet connection"
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: binary_sensor.internet_connection
    to: 'on'
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Internet connection restored"
        title: "Yay! ðŸŽ‰"
- id: notify_vigicrue
  alias: "Notify - Vigicrue"
  trigger:
    platform: numeric_state
    entity_id: sensor.rest_vigicrue_hydro_observation
    above: 1.8
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Vigicrue alert"
        title: "Above 1.8m ðŸŒŠ"
- id: notify_laundry1_finished
  alias: "Notify - Laundry 1 finished"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.laundry1
  action:
    - service: !secret notify_mobile_me
      data:
        message: "Laundry"
        title: "1:30 finished"
